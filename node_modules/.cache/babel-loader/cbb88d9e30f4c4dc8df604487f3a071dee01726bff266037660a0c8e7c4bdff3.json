{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi8\\\\firstapp\\\\src\\\\EditNote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Note from \"./Note\"; // Adjust the path accordingly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditNote = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: 1,\n    title: \"Note 1\",\n    content: \"Content 1\"\n  }\n  // other note objects\n  ]);\n\n  const editItem = (id, newData) => {\n    // Implement the logic to edit the note based on the id\n    setNotes(prevNotes => prevNotes.map(note => note.id === id ? {\n      ...note,\n      ...newData\n    } : note));\n  };\n  const deleteItem = id => {\n    // Implement the logic to delete the note based on the id\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      id: note.id,\n      title: note.title,\n      content: note.content,\n      deleteItem: deleteItem,\n      editItem: editItem\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(EditNote, \"FdqK+jxTUwQKyjvndqfdfIqd0NA=\");\n_c = EditNote;\nexport default EditNote;\nvar _c;\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"names":["React","useState","Note","jsxDEV","_jsxDEV","EditNote","_s","notes","setNotes","id","title","content","editItem","newData","prevNotes","map","note","deleteItem","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ravi8/firstapp/src/EditNote.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Note from \"./Note\"; // Adjust the path accordingly\r\n\r\nconst EditNote = () => {\r\n  const [notes, setNotes] = useState([\r\n    { id: 1, title: \"Note 1\", content: \"Content 1\" },\r\n    // other note objects\r\n  ]);\r\n\r\n  const editItem = (id, newData) => {\r\n    // Implement the logic to edit the note based on the id\r\n    setNotes((prevNotes) =>\r\n      prevNotes.map((note) => (note.id === id ? { ...note, ...newData } : note))\r\n    );\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    // Implement the logic to delete the note based on the id\r\n    setNotes((prevNotes) => prevNotes.filter((note) => note.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {notes.map((note) => (\r\n        <Note\r\n          key={note.id}\r\n          id={note.id}\r\n          title={note.title}\r\n          content={note.content}\r\n          deleteItem={deleteItem}\r\n          editItem={editItem}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditNote;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CACjC;IAAEQ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAY;EAC/C;EAAA,CACD,CAAC;;EAEF,MAAMC,QAAQ,GAAGA,CAACH,EAAE,EAAEI,OAAO,KAAK;IAChC;IACAL,QAAQ,CAAEM,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGO,IAAI;MAAE,GAAGH;IAAQ,CAAC,GAAGG,IAAK,CAC3E,CAAC;EACH,CAAC;EAED,MAAMC,UAAU,GAAIR,EAAE,IAAK;IACzB;IACAD,QAAQ,CAAEM,SAAS,IAAKA,SAAS,CAACI,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EACrE,CAAC;EAED,oBACEL,OAAA;IAAAe,QAAA,EACGZ,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBACdZ,OAAA,CAACF,IAAI;MAEHO,EAAE,EAAEO,IAAI,CAACP,EAAG;MACZC,KAAK,EAAEM,IAAI,CAACN,KAAM;MAClBC,OAAO,EAAEK,IAAI,CAACL,OAAQ;MACtBM,UAAU,EAAEA,UAAW;MACvBL,QAAQ,EAAEA;IAAS,GALdI,IAAI,CAACP,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhCID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}